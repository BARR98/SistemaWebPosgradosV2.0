/**
 * @fileoverview added by tsickle
 * Generated from: lib/ng-image-slider.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgImageSliderComponent } from './ng-image-slider.component';
import { SliderCustomImageComponent } from './slider-custom-image/slider-custom-image.component';
import { SliderLightboxComponent } from './slider-lightbox/slider-lightbox.component';
import { NgImageSliderService } from './ng-image-slider.service';
import * as ɵngcc0 from '@angular/core';
export class NgImageSliderModule {
}
NgImageSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgImageSliderModule });
NgImageSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgImageSliderModule_Factory(t) { return new (t || NgImageSliderModule)(); }, providers: [
        NgImageSliderService
    ], imports: [[
            CommonModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgImageSliderModule, { declarations: function () { return [NgImageSliderComponent,
        SliderCustomImageComponent,
        SliderLightboxComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgImageSliderComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgImageSliderModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    NgImageSliderComponent,
                    SliderCustomImageComponent,
                    SliderLightboxComponent
                ],
                providers: [
                    NgImageSliderService
                ],
                exports: [NgImageSliderComponent]
            }]
    }], null, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctaW1hZ2Utc2xpZGVyLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsibmc6L25nLWltYWdlLXNsaWRlci9saWIvbmctaW1hZ2Utc2xpZGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQ3JFLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHFEQUFxRCxDQUFDO0FBQ2pHLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3RGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDOztBQWdCakUsTUFBTSxPQUFPLG1CQUFtQjtBQUFHOytDQWRsQyxRQUFRLFNBQUMsa0JBQ047TUFBTyxFQUFFLHNCQUNMLFlBQVksa0JBQ2Ysa0JBQ0QsWUFBWSxFQUFFLHNCQUNWLHNCQUFzQixzQkFDdEI7dUJBQTBCO2dCQUMxQjtvQkFBdUI7YUFDMUI7Z0JBQ0QsU0FBUyxFQUFFLHNCQUNQLG9CQUFvQixrQkFDdkIsa0JBQ0QsT0FBTyxFQUFFLENBQUMsc0JBQXNCLENBQUMsY0FDcEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdJbWFnZVNsaWRlckNvbXBvbmVudCB9IGZyb20gJy4vbmctaW1hZ2Utc2xpZGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTbGlkZXJDdXN0b21JbWFnZUNvbXBvbmVudCB9IGZyb20gJy4vc2xpZGVyLWN1c3RvbS1pbWFnZS9zbGlkZXItY3VzdG9tLWltYWdlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTbGlkZXJMaWdodGJveENvbXBvbmVudCB9IGZyb20gJy4vc2xpZGVyLWxpZ2h0Ym94L3NsaWRlci1saWdodGJveC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmdJbWFnZVNsaWRlclNlcnZpY2UgfSBmcm9tICcuL25nLWltYWdlLXNsaWRlci5zZXJ2aWNlJztcblxuQE5nTW9kdWxlKHtcbiAgICBpbXBvcnRzOiBbXG4gICAgICAgIENvbW1vbk1vZHVsZVxuICAgIF0sXG4gICAgZGVjbGFyYXRpb25zOiBbXG4gICAgICAgIE5nSW1hZ2VTbGlkZXJDb21wb25lbnQsXG4gICAgICAgIFNsaWRlckN1c3RvbUltYWdlQ29tcG9uZW50LFxuICAgICAgICBTbGlkZXJMaWdodGJveENvbXBvbmVudFxuICAgIF0sXG4gICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIE5nSW1hZ2VTbGlkZXJTZXJ2aWNlXG4gICAgXSxcbiAgICBleHBvcnRzOiBbTmdJbWFnZVNsaWRlckNvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgTmdJbWFnZVNsaWRlck1vZHVsZSB7IH1cbiJdfQ==